version: '3.9'
services:
  database:
    container_name: database
    image: postgres:14-alpine
    env_file:
      - env_profile
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 20s
      retries: 2
      start_period: 30s
    restart: on-failure
    networks:
      - backend

  backend:
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
    build:
      context: lib_catalog
      dockerfile: Dockerfile
    healthcheck:
      test: curl -q --fail http://localhost:8000/admin || exit 1
      interval: 30s
      timeout: 20s
      retries: 2
      start_period: 30s
    restart: on-failure
    networks:
      - backend
      - frontend
    ports:
      - 8000:8000

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
      interval: 30s
      timeout: 20s
      retries: 2
      start_period: 30s
    restart: on-failure
    networks:
      - frontend
    ports:
      - 3000:3000

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/24
          gateway: 10.11.0.1
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.12.0.0/24
          gateway: 10.12.0.1
